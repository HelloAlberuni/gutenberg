<?xml version="1.0"?>
<ruleset name="WordPress Coding Standards for Gutenberg monorepo">
	<description>Sniffs defaults for all PHP files in the Gutenberg monorepo</description>

	<!-- Check for cross-version support for PHP 7.2 and higher. -->
	<config name="testVersion" value="7.2-"/>
	<rule ref="PHPCompatibilityWP">
		<include-pattern>*\.php$</include-pattern>
	</rule>

	<rule ref="WordPress-Core"/>
	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" type="array">
				<element value="gutenberg"/>
				<element value="default"/>
			</property>
		</properties>
	</rule>

	<rule ref="VariableAnalysis.CodeAnalysis.VariableAnalysis">
		<properties>
			<property name="allowUnusedParametersBeforeUsed" value="true"/>
		</properties>
	</rule>

	<rule ref="PEAR.Functions.FunctionCallSignature">
		<properties>
			<property name="allowMultipleArguments" value="false"/>
		</properties>
	</rule>

	<rule ref="WordPress.WP.I18n.MissingArgDomainDefault">
		<exclude-pattern>/lib/compat/*</exclude-pattern>
		<exclude-pattern>/packages/block-library/src/*</exclude-pattern>
		<exclude-pattern>/build/block-library/*</exclude-pattern>
	</rule>

	<arg value="ps"/>
	<arg name="extensions" value="php"/>

	<!-- Cache the scan results and re-use those for unchanged files on the next scan. -->
	<arg name="cache" value=".cache/phpcs.json"/>

	<!-- Exclude generated files -->
	<exclude-pattern>/packages/block-serialization-spec-parser/parser\.php$</exclude-pattern>
	<exclude-pattern>/node_modules/*</exclude-pattern>
	<exclude-pattern>/build/*</exclude-pattern>

	<!-- Exclude third party libraries -->
	<exclude-pattern>/vendor/*</exclude-pattern>
	<exclude-pattern>/test/php/gutenberg-coding-standards/*</exclude-pattern>

	<!-- Exclude files maintained in WordPress Core and backported to Gutenberg
	     DO NOT REMOVE these rules; these files are "built" artifacts from Core
	     and when they are removed it prevents keeping the repos in sync. -->
	<exclude-pattern>/lib/compat/wordpress-*/html-api/*\.php$</exclude-pattern>

	<!-- Ignore filename error since it requires WP core build process change -->
	<rule ref="WordPress.Files.FileName.InvalidClassFileName">
		<exclude-pattern>/phpunit/*</exclude-pattern>
		<exclude-pattern>/packages/block-library/src/navigation/index\.php$</exclude-pattern>
	</rule>

	<!-- Ignore empty files in tests/gutenberg-test-themes -->
	<rule ref="Internal.NoCodeFound">
		<exclude-pattern>/test/gutenberg-test-themes/*</exclude-pattern>
	</rule>

	<!-- Exclude PHPUnit tests from file and class name sniffs (for Core parity). -->
	<rule ref="WordPress.Files.FileName.NotHyphenatedLowercase">
		<exclude-pattern>/phpunit/*</exclude-pattern>
		<exclude-pattern>*\.asset\.php$</exclude-pattern>
	</rule>
	<rule ref="PEAR.NamingConventions.ValidClassName.Invalid">
		<exclude-pattern>/phpunit/*</exclude-pattern>
	</rule>

	<!-- Enforce checks against redeclaration for functions and classes. -->
	<rule ref="Gutenberg.CodeAnalysis.GuardedFunctionAndClassNames">
		<exclude-pattern>/phpunit/*</exclude-pattern>
		<exclude-pattern>/packages/*</exclude-pattern>
		<exclude-pattern>/bin/generate-gutenberg-php\.php$</exclude-pattern>
		<properties>
			<property name="functionsWhiteList" type="array">
				<element value="/^_?gutenberg.+/"/>
			</property>
			<property name="classesWhiteList" type="array">
				<element value="/^Gutenberg.+/"/>
				<element value="/^.+_Gutenberg$/"/>
			</property>
		</properties>
	</rule>
</ruleset>
